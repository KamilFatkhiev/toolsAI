name: Publish Python Package

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout ode
      uses: actions/checkout@v4
      
    - uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies and build package
      run: |
        poetry install
        poetry build

    - name: Save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
      
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      env:
        POETRY_TEST_PYPI_TOKEN_PYPI: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        poetry config pypi-token.testpypi $POETRY_TEST_PYPI_TOKEN_PYPI
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry publish --repository testpypi

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        gh release create
        "${GITHUB_REF_NAME}"
        --repo "${GITHUB_REPOSITORY}"
        --title "Release ${GITHUB_REF_NAME}"
        --generate-notes
    
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/**
        --repo "$GITHUB_REPOSITORY"
